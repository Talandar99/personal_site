<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>/</link>
    <description>Recent content on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Venv_jupyter</title>
      <link>/posts/venv_jupyter/</link>
      <pubDate>Wed, 11 Jun 2025 00:00:00 +0000</pubDate>
      <guid>/posts/venv_jupyter/</guid>
      <description>Using Jupyer notebook as python application Not too long ago i accidently discovered that Jupyer is just a python package that you can download and use.&#xA;Having good environment for interanctive programming in few commands on almost any device with python installed is really handy&#xA;It is simple to set up if you work in python on daily basis or used terminal a bit.&#xA;Prerequisite python3 pip3 How to create virtual python environment Installing packages randomly on system is kinda dumb idea.</description>
    </item>
    <item>
      <title>Jupyter &#43; Spark as Docker Compose</title>
      <link>/posts/how_to_setup_jupyter_notebook_with_docker_compose/</link>
      <pubDate>Sun, 18 May 2025 00:00:00 +0000</pubDate>
      <guid>/posts/how_to_setup_jupyter_notebook_with_docker_compose/</guid>
      <description>Prerequisite Make sure you have docker compose installed on your machine. I assume you have docker compose V2 but V1 should also do the job. We both know you are just as lazy bastard as I am. So i will start with most important stuff:&#xA;How to run 1. Create compose.yml file and add content above vim compose.yml compose.yml :&#xA;services: spark-scala-notebook: build: context: . dockerfile: Dockerfile args: NB_UID: 1000 NB_GID: 1000 image: spark-scala-notebook:latest ports: - &amp;#34;8888:8888&amp;#34; environment: - JUPYTER_TOKEN= volumes: - .</description>
    </item>
  </channel>
</rss>
